{
  "address": "0x00c368Cd1D7919d333B18bDFdbd7a31C24b36fFB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotEnoughFunds",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe879ab62d3f835efccc043107b06d44ae0eee411e0c263a66be7beeb7cc81103",
  "receipt": {
    "to": null,
    "from": "0xF8fa647Ae8fC360A97dED2AFA4836b0aFF8713AA",
    "contractAddress": "0x00c368Cd1D7919d333B18bDFdbd7a31C24b36fFB",
    "transactionIndex": 5,
    "gasUsed": "1074722",
    "logsBloom": "0x
    "blockHash": "0x687497dee6f7a03cce5245f047b8070fd7d44fcdbde871658f0fd3051183c63c",
    "transactionHash": "0xe879ab62d3f835efccc043107b06d44ae0eee411e0c263a66be7beeb7cc81103",
    "logs": [
      {
        "transactionIndex": 5,
        "blockNumber": 11025752,
        "transactionHash": "0xe879ab62d3f835efccc043107b06d44ae0eee411e0c263a66be7beeb7cc81103",
        "address": "0x00c368Cd1D7919d333B18bDFdbd7a31C24b36fFB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f8fa647ae8fc360a97ded2afa4836b0aff8713aa"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x687497dee6f7a03cce5245f047b8070fd7d44fcdbde871658f0fd3051183c63c"
      }
    ],
    "blockNumber": 11025752,
    "cumulativeGasUsed": "4910541",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "61ccbbd71054d319a3eff51a1b7fed8b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotEnoughFunds\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotEnoughFunds();\\n\\ncontract FundMe is Ownable {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    constructor(address priceFeedAddress) {\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(priceFeed) < MINIMUM_USD) {\\n            revert NotEnoughFunds();\\n        }\\n\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // reset array\\n        funders = new address[](0);\\n        // withdraw funds (transfer, send, call)\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x481232deff12d06935e78a72ba95cdd83c0ee47df00dd40bc0adec7a7f1de9f1\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.15;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // 3000_000000000000000000 = ETH / USD price\\n        // 1_000000000000000000 ETH\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x649efa9b557d7461d8bdc52e387b24ce63a02571766d4a7357444651608f692e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620013ae380380620013ae8339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b61119780620002176000396000f3fe60806040526004361061008a5760003560e01c8063741bef1a11610059578063741bef1a146101395780638da5cb5b14610164578063b60d42881461018f578063dc0d3dff14610199578063f2fde38b146101d657610099565b80633ccfd60b146100a35780633e47d6f3146100ba5780636b69a592146100f7578063715018a61461012257610099565b36610099576100976101ff565b005b6100a16101ff565b005b3480156100af57600080fd5b506100b8610331565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610a3e565b610569565b6040516100ee9190610a84565b60405180910390f35b34801561010357600080fd5b5061010c610581565b6040516101199190610a84565b60405180910390f35b34801561012e57600080fd5b5061013761058e565b005b34801561014557600080fd5b5061014e610616565b60405161015b9190610afe565b60405180910390f35b34801561017057600080fd5b5061017961063c565b6040516101869190610b28565b60405180910390f35b6101976101ff565b005b3480156101a557600080fd5b506101c060048036038101906101bb9190610b6f565b610665565b6040516101cd9190610b28565b60405180910390f35b3480156101e257600080fd5b506101fd60048036038101906101f89190610a3e565b6106a4565b005b6802b5e3af16b188000061023e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461079b90919063ffffffff16565b1015610276576040517f81b5ad6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103289190610bcb565b92505081905550565b6103396107d7565b73ffffffffffffffffffffffffffffffffffffffff1661035761063c565b73ffffffffffffffffffffffffffffffffffffffff16146103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490610c7e565b60405180910390fd5b60005b600280549050811015610459576000600282815481106103d3576103d2610c9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045190610ccd565b9150506103b0565b50600067ffffffffffffffff81111561047557610474610d15565b5b6040519080825280602002602001820160405280156104a35781602001602082028036833780820191505090505b50600290805190602001906104b9929190610934565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e090610d75565b60006040518083038185875af1925050503d806000811461051d576040519150601f19603f3d011682016040523d82523d6000602084013e610522565b606091505b5050905080610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055d90610dd6565b60405180910390fd5b50565b60036020528060005260406000206000915090505481565b6802b5e3af16b188000081565b6105966107d7565b73ffffffffffffffffffffffffffffffffffffffff166105b461063c565b73ffffffffffffffffffffffffffffffffffffffff161461060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190610c7e565b60405180910390fd5b61061460006107df565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002818154811061067557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106ac6107d7565b73ffffffffffffffffffffffffffffffffffffffff166106ca61063c565b73ffffffffffffffffffffffffffffffffffffffff1614610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790610c7e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690610e68565b60405180910390fd5b610798816107df565b50565b6000806107a7836108a3565b90506000670de0b6b3a764000085836107c09190610e88565b6107ca9190610f11565b9050809250505092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190610fcf565b5050509150506402540be4008161092c919061104a565b915050919050565b8280548282559060005260206000209081019282156109ad579160200282015b828111156109ac5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610954565b5b5090506109ba91906109be565b5090565b5b808211156109d75760008160009055506001016109bf565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0b826109e0565b9050919050565b610a1b81610a00565b8114610a2657600080fd5b50565b600081359050610a3881610a12565b92915050565b600060208284031215610a5457610a536109db565b5b6000610a6284828501610a29565b91505092915050565b6000819050919050565b610a7e81610a6b565b82525050565b6000602082019050610a996000830184610a75565b92915050565b6000819050919050565b6000610ac4610abf610aba846109e0565b610a9f565b6109e0565b9050919050565b6000610ad682610aa9565b9050919050565b6000610ae882610acb565b9050919050565b610af881610add565b82525050565b6000602082019050610b136000830184610aef565b92915050565b610b2281610a00565b82525050565b6000602082019050610b3d6000830184610b19565b92915050565b610b4c81610a6b565b8114610b5757600080fd5b50565b600081359050610b6981610b43565b92915050565b600060208284031215610b8557610b846109db565b5b6000610b9384828501610b5a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd682610a6b565b9150610be183610a6b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c1657610c15610b9c565b5b828201905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c68602083610c21565b9150610c7382610c32565b602082019050919050565b60006020820190508181036000830152610c9781610c5b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610cd882610a6b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d0a57610d09610b9c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d5f600083610d44565b9150610d6a82610d4f565b600082019050919050565b6000610d8082610d52565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc0600b83610c21565b9150610dcb82610d8a565b602082019050919050565b60006020820190508181036000830152610def81610db3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610e52602683610c21565b9150610e5d82610df6565b604082019050919050565b60006020820190508181036000830152610e8181610e45565b9050919050565b6000610e9382610a6b565b9150610e9e83610a6b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed757610ed6610b9c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1c82610a6b565b9150610f2783610a6b565b925082610f3757610f36610ee2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6181610f42565b8114610f6c57600080fd5b50565b600081519050610f7e81610f58565b92915050565b6000819050919050565b610f9781610f84565b8114610fa257600080fd5b50565b600081519050610fb481610f8e565b92915050565b600081519050610fc981610b43565b92915050565b600080600080600060a08688031215610feb57610fea6109db565b5b6000610ff988828901610f6f565b955050602061100a88828901610fa5565b945050604061101b88828901610fba565b935050606061102c88828901610fba565b925050608061103d88828901610f6f565b9150509295509295909350565b600061105582610f84565b915061106083610f84565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109f5761109e610b9c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110dc576110db610b9c565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111957611118610b9c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115657611155610b9c565b5b82820290509291505056fea2646970667358221220950e20f9d6baccaced32619e2dde0e6c9780df75b15dcecc03ba1078a6458b9664736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063741bef1a11610059578063741bef1a146101395780638da5cb5b14610164578063b60d42881461018f578063dc0d3dff14610199578063f2fde38b146101d657610099565b80633ccfd60b146100a35780633e47d6f3146100ba5780636b69a592146100f7578063715018a61461012257610099565b36610099576100976101ff565b005b6100a16101ff565b005b3480156100af57600080fd5b506100b8610331565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610a3e565b610569565b6040516100ee9190610a84565b60405180910390f35b34801561010357600080fd5b5061010c610581565b6040516101199190610a84565b60405180910390f35b34801561012e57600080fd5b5061013761058e565b005b34801561014557600080fd5b5061014e610616565b60405161015b9190610afe565b60405180910390f35b34801561017057600080fd5b5061017961063c565b6040516101869190610b28565b60405180910390f35b6101976101ff565b005b3480156101a557600080fd5b506101c060048036038101906101bb9190610b6f565b610665565b6040516101cd9190610b28565b60405180910390f35b3480156101e257600080fd5b506101fd60048036038101906101f89190610a3e565b6106a4565b005b6802b5e3af16b188000061023e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461079b90919063ffffffff16565b1015610276576040517f81b5ad6800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103289190610bcb565b92505081905550565b6103396107d7565b73ffffffffffffffffffffffffffffffffffffffff1661035761063c565b73ffffffffffffffffffffffffffffffffffffffff16146103ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a490610c7e565b60405180910390fd5b60005b600280549050811015610459576000600282815481106103d3576103d2610c9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045190610ccd565b9150506103b0565b50600067ffffffffffffffff81111561047557610474610d15565b5b6040519080825280602002602001820160405280156104a35781602001602082028036833780820191505090505b50600290805190602001906104b9929190610934565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e090610d75565b60006040518083038185875af1925050503d806000811461051d576040519150601f19603f3d011682016040523d82523d6000602084013e610522565b606091505b5050905080610566576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055d90610dd6565b60405180910390fd5b50565b60036020528060005260406000206000915090505481565b6802b5e3af16b188000081565b6105966107d7565b73ffffffffffffffffffffffffffffffffffffffff166105b461063c565b73ffffffffffffffffffffffffffffffffffffffff161461060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190610c7e565b60405180910390fd5b61061460006107df565b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002818154811061067557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106ac6107d7565b73ffffffffffffffffffffffffffffffffffffffff166106ca61063c565b73ffffffffffffffffffffffffffffffffffffffff1614610720576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071790610c7e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361078f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078690610e68565b60405180910390fd5b610798816107df565b50565b6000806107a7836108a3565b90506000670de0b6b3a764000085836107c09190610e88565b6107ca9190610f11565b9050809250505092915050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156108f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109159190610fcf565b5050509150506402540be4008161092c919061104a565b915050919050565b8280548282559060005260206000209081019282156109ad579160200282015b828111156109ac5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610954565b5b5090506109ba91906109be565b5090565b5b808211156109d75760008160009055506001016109bf565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a0b826109e0565b9050919050565b610a1b81610a00565b8114610a2657600080fd5b50565b600081359050610a3881610a12565b92915050565b600060208284031215610a5457610a536109db565b5b6000610a6284828501610a29565b91505092915050565b6000819050919050565b610a7e81610a6b565b82525050565b6000602082019050610a996000830184610a75565b92915050565b6000819050919050565b6000610ac4610abf610aba846109e0565b610a9f565b6109e0565b9050919050565b6000610ad682610aa9565b9050919050565b6000610ae882610acb565b9050919050565b610af881610add565b82525050565b6000602082019050610b136000830184610aef565b92915050565b610b2281610a00565b82525050565b6000602082019050610b3d6000830184610b19565b92915050565b610b4c81610a6b565b8114610b5757600080fd5b50565b600081359050610b6981610b43565b92915050565b600060208284031215610b8557610b846109db565b5b6000610b9384828501610b5a565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bd682610a6b565b9150610be183610a6b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c1657610c15610b9c565b5b828201905092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c68602083610c21565b9150610c7382610c32565b602082019050919050565b60006020820190508181036000830152610c9781610c5b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610cd882610a6b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d0a57610d09610b9c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d5f600083610d44565b9150610d6a82610d4f565b600082019050919050565b6000610d8082610d52565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dc0600b83610c21565b9150610dcb82610d8a565b602082019050919050565b60006020820190508181036000830152610def81610db3565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610e52602683610c21565b9150610e5d82610df6565b604082019050919050565b60006020820190508181036000830152610e8181610e45565b9050919050565b6000610e9382610a6b565b9150610e9e83610a6b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ed757610ed6610b9c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f1c82610a6b565b9150610f2783610a6b565b925082610f3757610f36610ee2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610f6181610f42565b8114610f6c57600080fd5b50565b600081519050610f7e81610f58565b92915050565b6000819050919050565b610f9781610f84565b8114610fa257600080fd5b50565b600081519050610fb481610f8e565b92915050565b600081519050610fc981610b43565b92915050565b600080600080600060a08688031215610feb57610fea6109db565b5b6000610ff988828901610f6f565b955050602061100a88828901610fa5565b945050604061101b88828901610fba565b935050606061102c88828901610fba565b925050608061103d88828901610f6f565b9150509295509295909350565b600061105582610f84565b915061106083610f84565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561109f5761109e610b9c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156110dc576110db610b9c565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561111957611118610b9c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561115657611155610b9c565b5b82820290509291505056fea2646970667358221220950e20f9d6baccaced32619e2dde0e6c9780df75b15dcecc03ba1078a6458b9664736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 191,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 194,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 198,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}